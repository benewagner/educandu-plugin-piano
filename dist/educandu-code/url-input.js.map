{
  "version": 3,
  "sources": ["../../src/educandu-code/url-input.js"],
  "sourcesContent": ["import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useMemo, useState } from 'react';\r\nimport DebouncedInput from '@educandu/educandu/components/debounced-input.js';\r\nimport { useService } from '@educandu/educandu/components/container-context.js';\r\nimport { SOURCE_TYPE } from '@educandu/educandu/domain/constants.js';\r\nimport PublicIcon from '@educandu/educandu/components/icons/general/public-icon.js';\r\nimport ClientConfig from '@educandu/educandu/bootstrap/client-config.js';\r\nimport PrivateIcon from '@educandu/educandu/components/icons/general/private-icon.js';\r\nimport { analyzeMediaUrl } from '@educandu/educandu/utils/media-utils.js';\r\nimport WikimediaIcon from '@educandu/educandu/components/icons/wikimedia/wikimedia-icon.js';\r\nimport { BankOutlined, GlobalOutlined, WarningOutlined, YoutubeOutlined } from '@ant-design/icons';\r\nimport ResourceSelectorDialog from '@educandu/educandu/components/resource-selector/resource-selector-dialog.js';\r\nimport { getSourceType, getPortableUrl, getAccessibleUrl, createMetadataForSource } from '@educandu/educandu/utils/source-utils.js';\r\n\r\nfunction UrlInput({ value, allowedSourceTypes, disabled, onChange }) {\r\n  const { t } = useTranslation('urlInput');\r\n  const clientConfig = useService(ClientConfig);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  const unsecureUrl = value && value.startsWith('http://');\r\n\r\n  const sourceType = useMemo(() => {\r\n    const newSourceType = getSourceType({ url: value, cdnRootUrl: clientConfig.cdnRootUrl });\r\n    return allowedSourceTypes.includes(newSourceType) ? newSourceType : SOURCE_TYPE.unsupported;\r\n  }, [clientConfig.cdnRootUrl, value, allowedSourceTypes]);\r\n\r\n  const inputPrefixIcon = useMemo(() => {\r\n    switch (sourceType) {\r\n      case SOURCE_TYPE.none:\r\n        return null;\r\n      case SOURCE_TYPE.youtube:\r\n        return <YoutubeOutlined />;\r\n      case SOURCE_TYPE.wikimedia:\r\n        return <WikimediaIcon />;\r\n      case SOURCE_TYPE.mediaLibrary:\r\n        return <BankOutlined />;\r\n      case SOURCE_TYPE.documentMedia:\r\n        return <PublicIcon />;\r\n      case SOURCE_TYPE.roomMedia:\r\n        return <PrivateIcon />;\r\n      case SOURCE_TYPE.external:\r\n        return unsecureUrl ? <WarningOutlined /> : <GlobalOutlined />;\r\n      default:\r\n        return <WarningOutlined />;\r\n    }\r\n  }, [sourceType, unsecureUrl]);\r\n\r\n  const handleInputValueChange = newValue => {\r\n    const accessibleUrl = getAccessibleUrl({ url: newValue, cdnRootUrl: clientConfig.cdnRootUrl });\r\n    const { sanitizedUrl } = analyzeMediaUrl(accessibleUrl);\r\n    const portableUrl = getPortableUrl({ url: sanitizedUrl, cdnRootUrl: clientConfig.cdnRootUrl });\r\n\r\n    const metadata = createMetadataForSource({ url: portableUrl, cdnRootUrl: clientConfig.cdnRootUrl });\r\n\r\n    onChange(portableUrl, metadata);\r\n  };\r\n\r\n  const handleDebouncedInputValueChange = event => {\r\n    handleInputValueChange(event.target.value);\r\n  };\r\n\r\n  const handleSelectButtonClick = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogSelect = newUrl => {\r\n    handleInputValueChange(newUrl);\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const renderInputPrefix = () => {\r\n    const tooltipTitle = `${t('common:source')}: ${t(`tooltip_${sourceType}`)}`;\r\n    const classes = classNames(\r\n      'UrlInput-prefix',\r\n      { 'UrlInput-prefix--error': sourceType === SOURCE_TYPE.unsupported },\r\n      { 'UrlInput-prefix--warning': unsecureUrl }\r\n    );\r\n\r\n    return (\r\n      <Tooltip title={tooltipTitle}>\r\n        <div className={classes}>\r\n          {inputPrefixIcon}\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  const classes = classNames(\r\n    'UrlInput',\r\n    'u-input-and-button',\r\n    { 'UrlInput--warning': unsecureUrl }\r\n  );\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <DebouncedInput\r\n        value={value}\r\n        disabled={disabled}\r\n        addonBefore={renderInputPrefix()}\r\n        onChange={handleDebouncedInputValueChange}\r\n        />\r\n      <Button\r\n        type=\"primary\"\r\n        disabled={disabled}\r\n        onClick={handleSelectButtonClick}\r\n        >\r\n        {t('common:select')}\r\n      </Button>\r\n      {!!unsecureUrl && (\r\n        <div className=\"UrlInput-warning\">{t('unsecureUrl')}</div>\r\n      )}\r\n      <ResourceSelectorDialog\r\n        url={value}\r\n        isOpen={isDialogOpen}\r\n        allowedSourceTypes={allowedSourceTypes}\r\n        onSelect={handleDialogSelect}\r\n        onClose={handleDialogClose}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nUrlInput.propTypes = {\r\n  allowedSourceTypes: PropTypes.arrayOf(PropTypes.oneOf(Object.values(SOURCE_TYPE))),\r\n  disabled: PropTypes.bool,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string\r\n};\r\n\r\nUrlInput.defaultProps = {\r\n  allowedSourceTypes: Object.values(SOURCE_TYPE),\r\n  disabled: false,\r\n  value: ''\r\n};\r\n\r\nexport default UrlInput;\r\n"],
  "mappings": "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",
  "names": ["classes"]
}
