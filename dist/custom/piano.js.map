{
  "version": 3,
  "sources": ["../../src/custom/piano.js"],
  "sourcesContent": ["import PropTypes from 'prop-types';\r\nimport id from '../educandu-code/unique-id.js';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { KeyWhite, KeyWhiteWithBlack } from './keys.js';\r\nimport { EXERCISE_TYPES, MIDI_NOTE_NAMES } from './constants.js';\r\n\r\n// 0 represents white and black key, 1 respresents white key. Second element is midiValue for white key.\r\nexport const pianoLayout = [\r\n  [0, 21], [1, 23], [0, 24], [0, 26], [1, 28], [0, 29], [0, 31], [0, 33], [1, 35], [0, 36], [0, 38], [1, 40], [0, 41], [0, 43], [0, 45], [1, 47], [0, 48],\r\n  [0, 50], [1, 52], [0, 53], [0, 55], [0, 57], [1, 59], [0, 60], [0, 62], [1, 64], [0, 65], [0, 67], [0, 69], [1, 71], [0, 72], [0, 74], [1, 76], [0, 77],\r\n  [0, 79], [0, 81], [1, 83], [0, 84], [0, 86], [1, 88], [0, 89], [0, 91], [0, 93], [1, 95], [0, 96], [0, 98], [1, 100], [0, 101], [0, 103], [0, 105],\r\n  [1, 107], [1, 108]\r\n];\r\n\r\nexport default function Piano(props) {\r\n\r\n  const { keys,\r\n    test,\r\n    colors,\r\n    pianoId,\r\n    content,\r\n    sampler,\r\n    inputNote,\r\n    activeNotes,\r\n    exerciseData,\r\n    updateKeyStyle,\r\n    canShowSolution,\r\n    hasSamplerLoaded,\r\n    updateActiveNotes,\r\n    isNoteInputEnabled,\r\n    isExercisePlayingRef,\r\n    answerMidiValueSequence } = props;\r\n\r\n  const { keyRange } = exerciseData ? exerciseData : content;\r\n  const { midiValueSequence } = exerciseData ? exerciseData : [];\r\n  const indicationMidiValue = midiValueSequence ? midiValueSequence[0] : null;\r\n  const piano = useRef(null);\r\n  const exerciseType = test.exerciseType;\r\n  const keyRangeLayout = pianoLayout.slice(keyRange.first, keyRange.last + 1);\r\n\r\n  const getNoteNameFromMidiValue = midiValue => {\r\n    return MIDI_NOTE_NAMES[midiValue];\r\n  };\r\n\r\n  const isBlackKey = key => {\r\n    if (key.classList.contains('Piano-keyBlack')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const playNote = midiValue => {\r\n    if (!hasSamplerLoaded) {\r\n      return;\r\n    }\r\n    sampler.current.triggerAttack(getNoteNameFromMidiValue(midiValue));\r\n  };\r\n\r\n  const stopNote = midiValue => {\r\n    if (!hasSamplerLoaded) {\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      sampler.current.triggerRelease(getNoteNameFromMidiValue(midiValue));\r\n    }, 150);\r\n  };\r\n\r\n  const handleMouseDown = e => {\r\n    if (typeof e.target.dataset.midiValue === 'undefined') {\r\n      return;\r\n    }\r\n    const midiValue = parseInt(e.target.dataset.midiValue, 10);\r\n\r\n    if (isExercisePlayingRef.current) {\r\n      return;\r\n    }\r\n\r\n    updateActiveNotes('Note on', midiValue);\r\n\r\n    playNote(midiValue);\r\n  };\r\n\r\n  const handleMouseUp = e => {\r\n    if (typeof e.target.dataset.midiValue === 'undefined' || isExercisePlayingRef.current) {\r\n      return;\r\n    }\r\n\r\n    const midiValue = parseInt(e.target.dataset.midiValue, 10);\r\n\r\n    if (isNoteInputEnabled.current) {\r\n      inputNote(midiValue);\r\n    }\r\n\r\n    updateActiveNotes('Note off', midiValue);\r\n    stopNote(midiValue);\r\n  };\r\n\r\n  const handleMouseOver = e => {\r\n    const key = e.target;\r\n    const midiValue = parseInt(key.dataset.midiValue, 10);\r\n    if (isBlackKey(key)) {\r\n      e.preventDefault();\r\n      const parent = key.parentElement;\r\n      const parentMidiValue = parseInt(parent.dataset.midiValue, 10);\r\n      updateKeyStyle('Note off', parentMidiValue);\r\n      const index = activeNotes.current.indexOf(parentMidiValue);\r\n      if (index !== -1) {\r\n        stopNote(parentMidiValue);\r\n        updateActiveNotes('Note off', parentMidiValue);\r\n      }\r\n    }\r\n\r\n    if (content.tests.length === 0 || exerciseType === EXERCISE_TYPES.noteSequence) {\r\n      updateKeyStyle('Note on', midiValue);\r\n    }\r\n  };\r\n\r\n  const handleMouseOut = e => {\r\n    const key = e.target;\r\n    const midiValue = parseInt(key.dataset.midiValue, 10);\r\n    const index = activeNotes.current.indexOf(midiValue);\r\n    if (index !== -1) {\r\n      updateActiveNotes('Note off', midiValue);\r\n      stopNote(midiValue);\r\n    }\r\n    if (![EXERCISE_TYPES.interval, EXERCISE_TYPES.chord].includes(exerciseType) && midiValue !== indicationMidiValue) {\r\n      updateKeyStyle('Note off', midiValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    piano.current.addEventListener('mousedown', handleMouseDown);\r\n    piano.current.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return function cleanup() {\r\n      piano.current?.removeEventListener('mousedown', handleMouseDown);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      piano.current?.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const keyElems = document.querySelectorAll(`#${pianoId} .Piano-key`);\r\n    for (const key of keyElems) {\r\n      key.addEventListener('mouseover', handleMouseOver);\r\n      key.addEventListener('mouseleave', handleMouseOut);\r\n    }\r\n    keys.current = [];\r\n    for (let i = 0; i < keyElems.length; i += 1) {\r\n      const index = parseInt(keyElems[i].dataset.midiValue, 10);\r\n      keys.current[index] = keyElems[i];\r\n    }\r\n  });\r\n\r\n  // Make sure active keys will be styled via DOM manipulation when note input via midi device has triggered rerender\r\n  useEffect(() => {\r\n    if (exerciseType === EXERCISE_TYPES.noteSequence) {\r\n      for (const midiValue of activeNotes.current) {\r\n        if (!answerMidiValueSequence.includes(midiValue)) {\r\n          const key = keys.current[midiValue];\r\n          key.style.backgroundColor = colors.activeKey;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div ref={piano} id={pianoId} className=\"Piano-pianoContainer\">\r\n      {keyRangeLayout.map((elem, index) => {\r\n        if (elem[0] === 0 && index < keyRangeLayout.length - 1) {\r\n          return (\r\n            <KeyWhiteWithBlack\r\n              colors={colors}\r\n              key={id.create()}\r\n              midiValue={elem[1]}\r\n              exerciseType={exerciseType}\r\n              canShowSolution={canShowSolution}\r\n              midiValueSequence={midiValueSequence}\r\n              answerMidiValueSequence={answerMidiValueSequence}\r\n              />\r\n          );\r\n        }\r\n        return (\r\n          <KeyWhite\r\n            colors={colors}\r\n            key={id.create()}\r\n            midiValue={elem[1]}\r\n            exerciseType={exerciseType}\r\n            canShowSolution={canShowSolution}\r\n            midiValueSequence={midiValueSequence}\r\n            answerMidiValueSequence={answerMidiValueSequence}\r\n            />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nPiano.propTypes = {\r\n  activeNotes: PropTypes.object.isRequired,\r\n  answerMidiValueSequence: PropTypes.array,\r\n  canShowSolution: PropTypes.bool,\r\n  colors: PropTypes.object.isRequired,\r\n  content: PropTypes.object.isRequired,\r\n  exerciseData: PropTypes.object,\r\n  hasSamplerLoaded: PropTypes.bool.isRequired,\r\n  inputNote: PropTypes.func,\r\n  isExercisePlayingRef: PropTypes.object.isRequired,\r\n  isNoteInputEnabled: PropTypes.object,\r\n  keys: PropTypes.object.isRequired,\r\n  pianoId: PropTypes.string.isRequired,\r\n  sampler: PropTypes.object,\r\n  test: PropTypes.object,\r\n  updateActiveNotes: PropTypes.func.isRequired,\r\n  updateKeyStyle: PropTypes.func.isRequired\r\n};\r\n\r\nPiano.defaultProps = {\r\n  answerMidiValueSequence: [],\r\n  canShowSolution: false,\r\n  exerciseData: {},\r\n  inputNote: () => {},\r\n  isNoteInputEnabled: {},\r\n  sampler: {},\r\n  test: { exerciseType: '' }\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": []
}
