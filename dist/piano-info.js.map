{
  "version": 3,
  "sources": ["../src/piano-info.js"],
  "sourcesContent": ["import joi from 'joi';\r\nimport React from 'react';\r\nimport cloneDeep from '@educandu/educandu/utils/clone-deep.js';\r\nimport { couldAccessUrlFromRoom } from '@educandu/educandu/utils/source-utils.js';\r\nimport GithubFlavoredMarkdown from '@educandu/educandu/common/github-flavored-markdown.js';\r\nimport PianoIcon from './icons/piano-icon.js';\r\n\r\nclass PianoInfo {\r\n  static dependencies = [GithubFlavoredMarkdown];\r\n\r\n  static typeName = 'benewagner/educandu-plugin-piano';\r\n\r\n  constructor(gfm) {\r\n    this.gfm = gfm;\r\n  }\r\n\r\n  getDisplayName(t) {\r\n    return t('benewagner/educandu-plugin-piano:name');\r\n  }\r\n\r\n  getIcon() {\r\n    return <PianoIcon />;\r\n  }\r\n\r\n  async resolveDisplayComponent() {\r\n    return (await import('./piano-display.js')).default;\r\n  }\r\n\r\n  async resolveEditorComponent() {\r\n    return (await import('./piano-editor.js')).default;\r\n  }\r\n\r\n  getDefaultCustomNoteSequence() {\r\n    return {\r\n      abc: 'C',\r\n      abcNoteNameSequence: ['C'],\r\n      clef: 'treble',\r\n      filteredAbc: 'C',\r\n      midiNoteNameSequence: ['C4'],\r\n      midiValueSequence: [60],\r\n      noteRange: { first: 19, last: 39 }\r\n    };\r\n  }\r\n\r\n  getDefaultTest() {\r\n    const defaultIntervalCheckboxStates = {\r\n      all: false,\r\n      prime: false,\r\n      second: {\r\n        minor: true,\r\n        major: true\r\n      },\r\n      third: {\r\n        minor: true,\r\n        major: true\r\n      },\r\n      fourth: true,\r\n      tritone: false,\r\n      fifth: true,\r\n      sixth: {\r\n        minor: true,\r\n        major: true\r\n      },\r\n      seventh: {\r\n        minor: true,\r\n        major: true\r\n      },\r\n      octave: false\r\n    };\r\n\r\n    return {\r\n      exerciseType: '',\r\n      intervalNoteRange: { first: 12, last: 39 },\r\n      chordNoteRange: { first: 12, last: 39 },\r\n      noteSequenceNoteRange: { first: 19, last: 39 },\r\n      whiteKeysOnly: false,\r\n      numberOfNotes: 4,\r\n      clef: 'treble',\r\n      isCustomNoteSequence: false,\r\n      customNoteSequences: [this.getDefaultCustomNoteSequence()],\r\n      intervalAllowsLargeIntervals: false,\r\n      chordAllowsLargeIntervals: false,\r\n      noteSequenceAllowsLargeIntervals: false,\r\n      directionCheckboxStates: {\r\n        up: true,\r\n        down: false\r\n      },\r\n      triadCheckboxStates: {\r\n        majorTriad: true,\r\n        minorTriad: true,\r\n        diminished: false,\r\n        augmented: false\r\n      },\r\n      seventhChordCheckboxStates: {\r\n        majorTriadMinorSeventh: false,\r\n        majorTriadMajorSeventh: false,\r\n        minorTriadMinorSeventh: false,\r\n        minorTriadMajorSeventh: false,\r\n        halfDiminished: false,\r\n        diminishedSeventh: false\r\n      },\r\n      inversionCheckboxStates: {\r\n        fundamental: true,\r\n        firstInversion: false,\r\n        secondInversion: false,\r\n        thirdInversion: false\r\n      },\r\n      intervalCheckboxStates: {\r\n        ...defaultIntervalCheckboxStates\r\n      },\r\n      noteSequenceCheckboxStates: {\r\n        ...defaultIntervalCheckboxStates\r\n      }\r\n    };\r\n  }\r\n\r\n  getDefaultContent() {\r\n    return {\r\n      sourceUrl: '',\r\n      keyRange: { first: 12, last: 39 },\r\n      midiTrackTitle: '',\r\n      colors: {\r\n        blackKey: 'rgb(56, 56, 56)',\r\n        whiteKey: 'rgb(255, 255, 255)',\r\n        activeKey: '#82E2FF',\r\n        correct: '#94F09D',\r\n        answer: '#F9F793',\r\n        wrong: '#FF8D8D'\r\n      },\r\n      sampleType: 'piano',\r\n      tests: []\r\n    };\r\n  }\r\n\r\n  validateContent(content) {\r\n    const schema = joi.object({\r\n      sourceUrl: joi.string().allow('').required(),\r\n      keyRange: joi.object({\r\n        first: joi.number().min(0).max(56).required(),\r\n        last: joi.number().min(0).max(56).required()\r\n      }),\r\n      midiTrackTitle: joi.string().allow('').required(),\r\n      colors: joi.object({\r\n        blackKey: joi.string().required(),\r\n        whiteKey: joi.string().required(),\r\n        activeKey: joi.string().required(),\r\n        correct: joi.string().required(),\r\n        answer: joi.string().required(),\r\n        wrong: joi.string().required()\r\n      }),\r\n      sampleType: joi.string().required(),\r\n      tests: joi.array().required()\r\n    });\r\n\r\n    joi.attempt(content, schema, { abortEarly: false, convert: false, noDefaults: true });\r\n  }\r\n\r\n  cloneContent(content) {\r\n    return cloneDeep(content);\r\n  }\r\n\r\n  redactContent(content, targetRoomId) {\r\n    const redactedContent = cloneDeep(content);\r\n\r\n    redactedContent.text = this.gfm.redactCdnResources(\r\n      redactedContent.text,\r\n      url => couldAccessUrlFromRoom(url, targetRoomId) ? url : ''\r\n    );\r\n\r\n    return redactedContent;\r\n  }\r\n\r\n  getCdnResources(content) {\r\n    return this.gfm.extractCdnResources(content.text);\r\n  }\r\n}\r\n\r\nexport default PianoInfo;\r\n"],
  "mappings": "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",
  "names": []
}
